{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/moazzam/ReactProjects/picnui Frontend/src/components/Welcome.jsx\";\nimport React, { Component } from \"react\";\nimport Profile from \"./Profile\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nclass Welcome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profileData: [{\n        url: \"/Images/ProfileImages/Moazzam.jpg\",\n        name: \"Abdul Muazzam\",\n        data: \"SP17-BSE-033\"\n      }, {\n        url: \"/Images/ProfileImages/Faizan.jpg\",\n        name: \"Faizan Haider\",\n        data: \"SP17-BSE-108\"\n      }, {\n        url: \"/Images/ProfileImages/Adeel.jpg\",\n        name: \"Adeel Arshd\",\n        data: \"SP17-BSE-132\"\n      }],\n      SupervisorprofileData: [{\n        url: \"/Images/ProfileImages/Dr Wajahat.jpg\",\n        name: \"Dr. Wajahat\",\n        data: \"Supervisor\"\n      }, {\n        url: \"/Images/ProfileImages/Dr Aksam.jpg\",\n        name: \"Dr. Aksam\",\n        data: \"Co. Supervisor\"\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Programming Industrial Cobots Using Natural User Interactions (PICNUI)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-\",\n            children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n              children: \"Cobots are the key element of the industrial revolution. They collaborate with humans to perform repetitive tasks. Currently, cobots are being trained using Teach pendant and Lead through methods. These methods are very hectic, difficult, and costly, highly skilled labor is also required to perform these methods. This project aims to minimize these difficulties by providing a rapid programming model, that consists of a platform to train cobots using natural user interactions. The project will involve a Kinect sensor to obtain user interactions (hand gestures and verbal commands). The system will propose a solution using the inputs obtained from the Kinect sensor. This proposed solution is hybrid in which the UR robot (cobot) is simulated in WEBOTS/UR Virtual Machine that is controlled by a human in the real-world through natural user interactions. The use of a simulated environment is because of the non-availability of the physical UR Cobot.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), this.state.profileData.map(p => Profile(p)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), this.state.SupervisorprofileData.map(p => Profile(p)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \");\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Welcome;","map":{"version":3,"sources":["/home/moazzam/ReactProjects/picnui Frontend/src/components/Welcome.jsx"],"names":["React","Component","Profile","BrowserRouter","Router","Welcome","state","profileData","url","name","data","SupervisorprofileData","render","map","p"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BK,KAD8B,GACtB;AACNC,MAAAA,WAAW,EAAE,CACX;AACEC,QAAAA,GAAG,EAAE,mCADP;AAEEC,QAAAA,IAAI,EAAE,eAFR;AAGEC,QAAAA,IAAI,EAAE;AAHR,OADW,EAMX;AACEF,QAAAA,GAAG,EAAE,kCADP;AAEEC,QAAAA,IAAI,EAAE,eAFR;AAGEC,QAAAA,IAAI,EAAE;AAHR,OANW,EAWX;AACEF,QAAAA,GAAG,EAAE,iCADP;AAEEC,QAAAA,IAAI,EAAE,aAFR;AAGEC,QAAAA,IAAI,EAAE;AAHR,OAXW,CADP;AAmBNC,MAAAA,qBAAqB,EAAE,CACrB;AACEH,QAAAA,GAAG,EAAE,sCADP;AAEEC,QAAAA,IAAI,EAAE,aAFR;AAGEC,QAAAA,IAAI,EAAE;AAHR,OADqB,EAMrB;AACEF,QAAAA,GAAG,EAAE,oCADP;AAEEC,QAAAA,IAAI,EAAE,WAFR;AAGEC,QAAAA,IAAI,EAAE;AAHR,OANqB;AAnBjB,KADsB;AAAA;;AAkC9BE,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAqBE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eA6BE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,KAAKN,KAAL,CAAWC,WAAX,CAAuBM,GAAvB,CAA4BC,CAAD,IAAOZ,OAAO,CAACY,CAAD,CAAzC,CAFH,eAGE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF,eAkCE;AAAA;AAAA;AAAA;AAAA,gBAlCF,eAmCE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,KAAKR,KAAL,CAAWK,qBAAX,CAAiCE,GAAjC,CAAsCC,CAAD,IAAOZ,OAAO,CAACY,CAAD,CAAnD,CAFH,eAGE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8CD;;AAjF6B;;AAoFhC,eAAeT,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Profile from \"./Profile\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nclass Welcome extends Component {\n  state = {\n    profileData: [\n      {\n        url: \"/Images/ProfileImages/Moazzam.jpg\",\n        name: \"Abdul Muazzam\",\n        data: \"SP17-BSE-033\",\n      },\n      {\n        url: \"/Images/ProfileImages/Faizan.jpg\",\n        name: \"Faizan Haider\",\n        data: \"SP17-BSE-108\",\n      },\n      {\n        url: \"/Images/ProfileImages/Adeel.jpg\",\n        name: \"Adeel Arshd\",\n        data: \"SP17-BSE-132\",\n      },\n    ],\n\n    SupervisorprofileData: [\n      {\n        url: \"/Images/ProfileImages/Dr Wajahat.jpg\",\n        name: \"Dr. Wajahat\",\n        data: \"Supervisor\",\n      },\n      {\n        url: \"/Images/ProfileImages/Dr Aksam.jpg\",\n        name: \"Dr. Aksam\",\n        data: \"Co. Supervisor\",\n      },\n    ],\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"container-fluid\">\n          <h1>\n            Programming Industrial Cobots Using Natural User Interactions\n            (PICNUI)\n          </h1>\n          <div className=\"row\">\n            <div className=\"col-\">\n              <blockquote>\n                Cobots are the key element of the industrial revolution. They\n                collaborate with humans to perform repetitive tasks. Currently,\n                cobots are being trained using Teach pendant and Lead through\n                methods. These methods are very hectic, difficult, and costly,\n                highly skilled labor is also required to perform these methods.\n                This project aims to minimize these difficulties by providing a\n                rapid programming model, that consists of a platform to train\n                cobots using natural user interactions. The project will involve\n                a Kinect sensor to obtain user interactions (hand gestures and\n                verbal commands). The system will propose a solution using the\n                inputs obtained from the Kinect sensor. This proposed solution\n                is hybrid in which the UR robot (cobot) is simulated in\n                WEBOTS/UR Virtual Machine that is controlled by a human in the\n                real-world through natural user interactions. The use of a\n                simulated environment is because of the non-availability of the\n                physical UR Cobot.\n              </blockquote>\n            </div>\n            <div className=\"col-3\"></div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-1\"></div>\n            {this.state.profileData.map((p) => Profile(p))}\n            <div className=\"col-1\"></div>\n          </div>\n          <br />\n          <div className=\"row\">\n            <div className=\"col-2\"></div>\n            {this.state.SupervisorprofileData.map((p) => Profile(p))}\n            <div className=\"col-2\"></div>\n          </div>\n        </div>\n        );\n      </Router>\n    );\n  }\n}\n\nexport default Welcome;\n"]},"metadata":{},"sourceType":"module"}